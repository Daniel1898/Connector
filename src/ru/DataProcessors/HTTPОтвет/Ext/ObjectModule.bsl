#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//Производит инициализацию HTTP ответа
//
// Параметры:
//  ПараметрыИнициализации  - Струткура - ответ на выполненный запрос:
//     * ВремяВыполнения - Число - время выполнения запроса в миллисекундах.
//     * Cookies - Соответствие - cookies полученные с сервера.
//     * Заголовки - Соответствие - HTTP заголовки ответа.
//     * ЭтоПостоянныйРедирект - Булево - признак постоянного редиректа.
//     * ЭтоРедирект - Булево - признак редиректа.
//     * Кодировка - Строка - кодировка текста ответа.
//     * Тело - ДвоичныеДанные - тело ответа.
//     * КодСостояния - Число - код состояния ответа.
//     * URL - Строка - итоговый URL, по которому был выполнен запрос.
//
Функция Инициализировать(ДанныеИнициализации) Экспорт
	Если ТипЗнч(ДанныеИнициализации) = Тип("Структура") Тогда
		ДанныеИнициализации.Свойство("ВремяВыполнения", ВремяВыполнения);
		ДанныеИнициализации.Свойство("Cookies", Cookies);
		ДанныеИнициализации.Свойство("Заголовки", Заголовки);
		ДанныеИнициализации.Свойство("ЭтоПостоянныйРедирект", ЭтоПостоянныйРедирект);
		ДанныеИнициализации.Свойство("Кодировка", Кодировка);
		ДанныеИнициализации.Свойство("Тело", Тело);
		ДанныеИнициализации.Свойство("КодСостояния", КодСостояния);
		ДанныеИнициализации.Свойство("URL", URL);
	КонецЕсли;
КонецФункции

// Возвращает ответ сервера в виде десериализованного значения JSON.
//
// Параметры:
//   ПараметрыПреобразованияJSON - Структура - задает параметры преобразования JSON.
//     * ПрочитатьВСоответствие - Булево - Если Истина, чтение объекта JSON будет выполнено в Соответствие.
//                                         Если Ложь, объекты будут считываться в объект типа Структура.
//     * ФорматДатыJSON - ФорматДатыJSON - формат, в котором представлена дата в строке, подлежащей преобразованию.
//     * ИменаСвойствСоЗначениямиДата -  Массив, Строка - имена свойств JSON,
//         для которых нужно вызывать восстановление даты из строки.
//     * ИмяФункцииВосстановления - Строка - определяет имя функции, которая будет вызывается при чтении
//         каждого свойства и должна иметь следующие параметры:
//            ** Свойство - Строка - указывается только при чтении объектов JSON
//            ** Значение - Произвольный - значение допустимого для сериализации типа
//            ** ДополнительныеПараметры - Произвольный
//         Возвращаемое значение:
//            Произвольный - значение, десериализованное из JSON. 
//     * МодульФункцииВосстановления - Произвольный - определяет модуль, процедура которого будет использована для
//         восстановления значения.
//     * ДополнительныеПараметрыФункцииВосстановления - Произвольный - определяет дополнительные параметры, которые
//         будут переданы в функцию восстановления значений.
//     * ИменаСвойствДляОбработкиВосстановления - Массив - определяет массив имен свойств JSON, для которых
//         будет вызвана функция восстановления.
//     * МаксимальнаяВложенность - Число - определяет максимальный уровень вложенности объекта JSON.
//
// Возвращаемое значение:
//   Соответствие - ответ сервера в виде десериализованного значения JSON.
//     Если ПараметрыПреобразования.ПрочитатьВСоответствие = Истина (по умолчанию).
//   Структура - если ПараметрыПреобразования.ПрочитатьВСоответствие = Ложь.
//
Функция КакJson(ПараметрыПреобразованияJSON = Неопределено) Экспорт
	
	Ответ = КакСтруктура();
	
	Возврат КоннекторHTTP.КакJson(Ответ, ПараметрыПреобразованияJSON);
	
КонецФункции 

// Возвращает ответ сервера в виде структуры
//
// Возвращаемое значение:
//  Струткура - Данные http ответа в виде структуры:
//     * ВремяВыполнения - Число - время выполнения запроса в миллисекундах.
//     * Cookies - Соответствие - cookies полученные с сервера.
//     * Заголовки - Соответствие - HTTP заголовки ответа.
//     * ЭтоПостоянныйРедирект - Булево - признак постоянного редиректа.
//     * ЭтоРедирект - Булево - признак редиректа.
//     * Кодировка - Строка - кодировка текста ответа.
//     * Тело - ДвоичныеДанные - тело ответа.
//     * КодСостояния - Число - код состояния ответа.
//     * URL - Строка - итоговый URL, по которому был выполнен запрос.
//
Функция КакСтруктура() Экспорт
	
	Ответ = Новый Структура();
	Ответ.Вставить("ВремяВыполнения", ВремяВыполнения);
	Ответ.Вставить("Cookies", Cookies);
	Ответ.Вставить("Заголовки", Заголовки);
	Ответ.Вставить("ЭтоПостоянныйРедирект", ЭтоПостоянныйРедирект);
	Ответ.Вставить("Кодировка", Кодировка);
	Ответ.Вставить("Тело", Тело);
	Ответ.Вставить("КодСостояния", КодСостояния);
	Ответ.Вставить("URL", URL);
	
	Возврат Ответ;
	
КонецФункции

#КонецОбласти

#КонецЕсли
